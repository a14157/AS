apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    io.portainer.kubernetes.application.note: ""
  creationTimestamp: "2022-01-25T20:38:24Z"
  generation: 1
  labels:
    io.portainer.kubernetes.application.name: python
    io.portainer.kubernetes.application.owner: admin
    io.portainer.kubernetes.application.stack: astpStack
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:io.portainer.kubernetes.application.note: {}
        f:labels:
          .: {}
          f:io.portainer.kubernetes.application.name: {}
          f:io.portainer.kubernetes.application.owner: {}
          f:io.portainer.kubernetes.application.stack: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
              f:io.portainer.kubernetes.application.name: {}
          f:spec:
            f:containers:
              k:{"name":"python"}:
                .: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: Mozilla
    operation: Update
    time: "2022-01-25T20:38:24Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kubelite
    operation: Update
    subresource: status
    time: "2022-01-29T10:31:43Z"
  name: python
  namespace: arqsis
  resourceVersion: "112577"
  selfLink: /apis/apps/v1/namespaces/arqsis/deployments/python
  uid: b2a0b484-9f27-49ce-9d9b-114726f1f693
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: python
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: python
        io.portainer.kubernetes.application.name: python
    spec:
      containers:
      - image: pcerqueira25/python:latest
        imagePullPolicy: Always
        name: python
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2022-01-25T20:38:25Z"
    lastUpdateTime: "2022-01-25T20:38:25Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2022-01-25T20:38:24Z"
    lastUpdateTime: "2022-01-25T20:42:24Z"
    message: ReplicaSet "python-7cbdf59d47" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2022-01-25T20:38:24Z"
  labels:
    io.portainer.kubernetes.application.name: python
    io.portainer.kubernetes.application.owner: admin
    io.portainer.kubernetes.application.stack: astpStack
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:labels:
          .: {}
          f:io.portainer.kubernetes.application.name: {}
          f:io.portainer.kubernetes.application.owner: {}
          f:io.portainer.kubernetes.application.stack: {}
      f:spec:
        f:externalTrafficPolicy: {}
        f:internalTrafficPolicy: {}
        f:ports:
          .: {}
          k:{"port":9000,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:nodePort: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
        f:selector: {}
        f:sessionAffinity: {}
        f:type: {}
    manager: Mozilla
    operation: Update
    time: "2022-01-25T20:38:24Z"
  name: python
  namespace: arqsis
  resourceVersion: "40164"
  selfLink: /api/v1/namespaces/arqsis/services/python
  uid: 3f6e400e-9ed0-44d0-a6e8-e56ee9870c6f
spec:
  clusterIP: 10.152.183.209
  clusterIPs:
  - 10.152.183.209
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: python-9000-tcp
    nodePort: 30048
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: python
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
