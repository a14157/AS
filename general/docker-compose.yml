version: '3'
services:
  database:
    image: mongo:latest
    container_name: database
    ports:
      - "27017:27017"
    restart: always
    networks:
      - rental-internal-network

  nodered:
    image: nodered/node-red:latest
    container_name: nodered
    restart: unless-stopped
    environment:
      - TZ=Europe/London
    networks:
      - rental-internal-network
    ports:
      - "1880:1880"
    volumes:
      - node-red-data:/data

  mqttbroker:
    image: eclipse-mosquitto:1.6.13
    container_name: mqttbroker
    hostname: brocker
    restart: unless-stopped
    networks:
      - rental-internal-network
    ports:
      - "1883:1883"

  users:
    container_name: users
    build:
      context: ./User
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - DBHOST=mongodb://database:27017/
      - DBNAME=TPAS
    restart: "always"
    networks:
      - rental-internal-network
    depends_on:
      - database
  
  vehicles:
    container_name: vehicles
    build:
      context: ./Vehicle
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
      - DBHOST=mongodb://database:27017/
      - DBNAME=TPAS
    restart: "always"
    networks:
      - rental-internal-network
    depends_on:
      - database
 
  routeprice:
    container_name: routeprice
    build:
      context: ./RoutePrice
      dockerfile: Dockerfile
    ports:
      - "4500:4500"
    environment:
      - PORT=4500
      - DBHOST=mongodb://database:27017/
      - DBNAME=TPAS
    restart: "always"
    networks:
      - rental-internal-network
    depends_on:
      - database
      - geoserver

  rentservice:
    container_name: rentservice
    build:
      context: ./RentService
      dockerfile: Dockerfile
    ports:
      - "3500:3500"
    environment:
      - PORT=3500
      - DBHOST=mongodb://database:27017/
      - DBNAME=TPAS
    restart: "always"
    networks:
      - rental-internal-network
    depends_on:
      - python
      - users
      - routeprice
      - vehicles
      - rentalrequestservice
      - nodered
      - database

  rentalrequestservice:
    container_name: rentalrequestservice
    build:
      context: ./RentalRequestsRegister
      dockerfile: Dockerfile
    ports:
      - "6000:6000"
    environment:
      - PORT=6000
      - DBHOST=mongodb://database:27017/
      - DBNAME=TPAS
    restart: "always"
    networks:
      - rental-internal-network
    depends_on:
      - nodered
      - database

  python:
    container_name: python
    build:
      context: ./Python
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    networks:
      - rental-internal-network

  postgis:
    image: pgrouting/pgrouting
    container_name: postgis
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ../pgdata:/var/lib/postgresql/data
    networks:
      - rental-internal-network

  pgadmin4:
    image: dpage/pgadmin4
    container_name: pgadmin4
    ports:
      - '5050:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@ola.pt
      PGADMIN_DEFAULT_PASSWORD: admin
    links:
      - postgis
    networks:
      - rental-internal-network

  geoserver:
    image: geonode/geoserver
    container_name: geoserver
    ports:
      - '8080:8080'
      - '80:80'
    links:
      - postgis
    volumes:
      - ../geoserverdata:/geoserver_data/data
    networks:
      - rental-internal-network

volumes:
  node-red-data:

networks:
  rental-internal-network:
    driver: bridge